# Generated by Django 5.1.6 on 2025-05-09 18:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('stock_analyzer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_symbol', models.CharField(max_length=10, unique=True)),
                ('company_name', models.CharField(max_length=255)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('employee_count', models.IntegerField(blank=True, null=True)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['stock_symbol'],
            },
        ),
        migrations.CreateModel(
            name='FinancialStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement_type', models.CharField(choices=[('income', 'Income Statement'), ('balance', 'Balance Sheet'), ('cash_flow', 'Cash Flow Statement')], max_length=20)),
                ('period_type', models.CharField(choices=[('annual', 'Annual'), ('quarterly', 'Quarterly')], max_length=20)),
                ('fiscal_year', models.IntegerField()),
                ('fiscal_period', models.CharField(max_length=10)),
                ('filing_date', models.DateField()),
                ('data', models.JSONField()),
                ('source', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_statements', to='stock_analyzer.companyprofile')),
            ],
            options={
                'ordering': ['-filing_date'],
            },
        ),
        migrations.CreateModel(
            name='InvestmentScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('valuation_score', models.FloatField()),
                ('growth_score', models.FloatField()),
                ('profitability_score', models.FloatField()),
                ('financial_health_score', models.FloatField()),
                ('technical_score', models.FloatField()),
                ('sentiment_score', models.FloatField()),
                ('overall_score', models.FloatField()),
                ('recommendation', models.CharField(choices=[('strong_buy', 'Strong Buy'), ('buy', 'Buy'), ('hold', 'Hold'), ('sell', 'Sell'), ('strong_sell', 'Strong Sell')], max_length=20)),
                ('analysis_summary', models.TextField()),
                ('key_strengths', models.TextField(blank=True, null=True)),
                ('key_risks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investment_scores', to='stock_analyzer.companyprofile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sma_20', models.FloatField(blank=True, null=True)),
                ('sma_50', models.FloatField(blank=True, null=True)),
                ('sma_200', models.FloatField(blank=True, null=True)),
                ('ema_12', models.FloatField(blank=True, null=True)),
                ('ema_26', models.FloatField(blank=True, null=True)),
                ('rsi_14', models.FloatField(blank=True, null=True)),
                ('macd', models.FloatField(blank=True, null=True)),
                ('macd_signal', models.FloatField(blank=True, null=True)),
                ('macd_histogram', models.FloatField(blank=True, null=True)),
                ('bollinger_upper', models.FloatField(blank=True, null=True)),
                ('bollinger_middle', models.FloatField(blank=True, null=True)),
                ('bollinger_lower', models.FloatField(blank=True, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('beta', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_indicators', to='stock_analyzer.companyprofile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ValuationMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('pe_ratio', models.FloatField(blank=True, null=True)),
                ('pb_ratio', models.FloatField(blank=True, null=True)),
                ('ps_ratio', models.FloatField(blank=True, null=True)),
                ('peg_ratio', models.FloatField(blank=True, null=True)),
                ('ev_to_ebitda', models.FloatField(blank=True, null=True)),
                ('dividend_yield', models.FloatField(blank=True, null=True)),
                ('profit_margin', models.FloatField(blank=True, null=True)),
                ('roe', models.FloatField(blank=True, null=True)),
                ('roa', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valuation_metrics', to='stock_analyzer.companyprofile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
    ]
